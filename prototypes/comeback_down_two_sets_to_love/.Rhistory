tot_love_2 = sum(love_2))
summary_dat %>% View()
summary_dat_hard<- historic_set_data %>%
filter(surface == 'Hard') %>%
group_by(year) %>%
summarise(matches = n(),
tot_straight_sets = sum(straight_set),
tot_complete_comebacks = sum(five_set_complete_comeback),
tot_almost_comebacks = sum(five_set_incomplete_comeback),
push_to_five = sum(five_set_complete_comeback) + sum(five_set_incomplete_comeback),
tot_love_2 = sum(love_2))
summary_dat_clay<- historic_set_data %>%
filter(surface == 'Clay') %>%
group_by(year) %>%
summarise(matches = n(),
tot_straight_sets = sum(straight_set),
tot_complete_comebacks = sum(five_set_complete_comeback),
tot_almost_comebacks = sum(five_set_incomplete_comeback),
push_to_five = sum(five_set_complete_comeback) + sum(five_set_incomplete_comeback),
tot_love_2 = sum(love_2))
historic_set_data$surface
unique(historic_set_data$surface)
summary_dat_grass<- historic_set_data %>%
filter(surface == 'Grass') %>%
group_by(year) %>%
summarise(matches = n(),
tot_straight_sets = sum(straight_set),
tot_complete_comebacks = sum(five_set_complete_comeback),
tot_almost_comebacks = sum(five_set_incomplete_comeback),
push_to_five = sum(five_set_complete_comeback) + sum(five_set_incomplete_comeback),
tot_love_2 = sum(love_2))
summary_dat_clay <- summary_dat_clay %>%
mutate(prop_push_to_five = push_to_five / matches,
prop_complete_comebacks = tot_complete_comebacks/matches,
prop_almost_comebacks = tot_almost_comebacks/matches)
ggplot(data = summary_dat_clay, aes(x = year, y = prop_push_to_five)) +
geom_point() +
#geom_smooth(method='lm')
geom_smooth(method='auto')
ggplot(data = summary_dat_clay, aes(x = year, y = prop_complete_comebacks)) +
geom_point() +
geom_smooth(method='auto')
ggplot(data = summary_dat_clay, aes(x = year, y = prop_almost_comebacks)) +
geom_point() +
geom_smooth(method='auto')
summary_dat_grass <- summary_dat_grass %>%
mutate(prop_push_to_five = push_to_five / matches,
prop_complete_comebacks = tot_complete_comebacks/matches,
prop_almost_comebacks = tot_almost_comebacks/matches)
summary_dat_hard <- summary_dat_hard %>%
mutate(prop_push_to_five = push_to_five / matches,
prop_complete_comebacks = tot_complete_comebacks/matches,
prop_almost_comebacks = tot_almost_comebacks/matches)
# -- hard plots
ggplot(data = summary_dat_hard, aes(x = year, y = prop_push_to_five)) +
geom_point() +
#geom_smooth(method='lm')
geom_smooth(method='auto')
ggplot(data = summary_dat_hard, aes(x = year, y = prop_complete_comebacks)) +
geom_point() +
geom_smooth(method='auto')
ggplot(data = summary_dat_hard, aes(x = year, y = prop_almost_comebacks)) +
geom_point() +
geom_smooth(method='auto')
# -- grass plots
ggplot(data = summary_dat_grass, aes(x = year, y = prop_push_to_five)) +
geom_point() +
#geom_smooth(method='lm')
geom_smooth(method='auto')
ggplot(data = summary_dat_grass, aes(x = year, y = prop_complete_comebacks)) +
geom_point() +
geom_smooth(method='auto')
ggplot(data = summary_dat_grass, aes(x = year, y = prop_almost_comebacks)) +
geom_point() +
geom_smooth(method='auto')
# --All surfaces
ggplot(data = summary_dat, aes(x = year, y = prop_complete_comebacks)) +
geom_point() +
geom_smooth(method='auto')
historic_set_data %>%
filter(five_set_complete_comeback == 1) %>%
View()
summary_dat<- historic_set_data %>%
group_by(year) %>%
summarise(matches = n(),
tot_straight_sets = sum(straight_set),
tot_complete_comebacks = sum(five_set_complete_comeback),
tot_almost_comebacks = sum(five_set_incomplete_comeback),
push_to_five = sum(five_set_complete_comeback) + sum(five_set_incomplete_comeback),
tot_love_2 = sum(love_2))
summary_dat <- summary_dat %>%
mutate(prop_push_to_five = push_to_five / matches,
prop_complete_comebacks = tot_complete_comebacks/matches,
prop_almost_comebacks = tot_almost_comebacks/matches)
# --All surfaces
ggplot(data = summary_dat, aes(x = year, y = prop_complete_comebacks)) +
geom_point() +
geom_smooth(method='auto')
# --All surfaces
ggplot(data = summary_dat %>% filter(year > 1999), aes(x = year, y = prop_complete_comebacks)) +
geom_point() +
geom_smooth(method='auto')
# --All surfaces
ggplot(data = summary_dat %>% filter(year > 1999), aes(x = year, y = prop_push_to_five)) +
geom_point() +
geom_smooth(method='auto')
# --All surfaces
ggplot(data = summary_dat, aes(x = year, y = prop_push_to_five)) +
geom_point() +
geom_smooth(method='auto')
# -- Plot our findings...
# --All surfaces
ggplot(data = summary_dat, aes(x = year, y = prop_push_to_five)) +
geom_point() +
geom_smooth(method='auto')
ggplot(data = summary_dat, aes(x = year, y = prop_complete_comebacks)) +
geom_point() +
geom_smooth(method='auto')
ggplot(data = summary_dat, aes(x = year, y = prop_almost_comebacks)) +
geom_point() +
geom_smooth(method='auto')
colnames(historic_set_data)
# --- Losing first set analysis
historic_set_data <- historic_set_data %>%
mutate(winner_lost_1st_set = ifelse(first_set_winner == 2, 1,0))
historic_set_data %>%
group_by(year) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n())
historic_set_data %>%
group_by(year) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n()) %>%
View()
historic_set_data %>%
group_by(year, surface) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n()) %>%
View()
historic_set_data %>%
group_by(year, surface) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n()) %>%
View()
historic_set_data %>%
group_by(year, surface) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n()) %>%
ggplot(aes(x = year, y = prop_drop_1st_set_and_win)) +
geom_point()
historic_set_data %>%
group_by(year, surface) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n()) %>%
ggplot(aes(x = year, y = prop_drop_1st_set_and_win)) +
geom_point() + geom_line()
historic_set_data %>%
group_by(year, surface) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n()) %>%
ggplot(aes(x = year, y = prop_drop_1st_set_and_win)) +
geom_point() + geom_line('red')
historic_set_data %>%
group_by(year, surface) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n()) %>%
ggplot(aes(x = year, y = prop_drop_1st_set_and_win)) +
geom_point() + geom_line(color = 'red')
historic_set_data %>%
group_by(year, surface) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n()) %>%
ggplot(aes(x = year, y = prop_drop_1st_set_and_win)) +
geom_point() + geom_line(color = 'red', linetype = 2)
historic_set_data %>%
group_by(year, surface) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n()) %>%
ggplot(aes(x = year, y = prop_drop_1st_set_and_win)) +
geom_point(colour = 'blue') + geom_line(color = 'red', linetype = 2)
historic_set_data %>%
group_by(year, surface) %>%
summarise(prop_drop_1st_set_and_win = sum(winner_lost_1st_set)/n()) %>%
ggplot(aes(x = year, y = prop_drop_1st_set_and_win)) +
geom_point(colour = 'blue', fill = 'green') + geom_line(color = 'red', linetype = 2)
# Sackmann's tennis_atp data
library(dplyr)
# Collect who won given a single set score
wta_who_won_set <- function(score){
# ***
# Given a set score (factor), who won the set?
# ***
score <- as.character(score)
separate_scores <- unlist(strsplit(as.character(score), '-'))
player1_score <- substr(separate_scores[1], start = 1, stop = 1)
player2_score <- substr(separate_scores[2], start = 1, stop = 1)
who_won <- ifelse(as.numeric(player1_score) > as.numeric(player2_score),
1,2)
return(who_won)
}
wta_get_set_vector <- function(entire_score){
score_line <- unlist(strsplit(as.character(entire_score), ' '))
who_won_vector <- c()
for(index in 1:length(score_line)){
score <- score_line[index]
who_won_vector[index] <- wta_who_won_set(score=score)
}
return(who_won_vector)
}
# Collect tidy dataframe for one match
wta_get_set_tidy_df <- function(entire_score, year, tournament, round,
player1_name, player2_name, surface){
set_winners <- wta_get_set_vector(entire_score)
numsets <- length(set_winners)
first_set_winner <- set_winners[1]
second_set_winner <- set_winners[2]
# -- If sets went beyond 3
third_set_winner <- ifelse(numsets ==3,
set_winners[3],
0)
straight_set <- ifelse( (first_set_winner == second_set_winner),
1,0)
summary_data <- data.frame('year' = year,
'tournament' = tournament,
'round' = round,
'surface' = surface,
'player1' = player1_name,
'player2' = player2_name,
'first_set_winner' = first_set_winner,
'second_set_winner' = second_set_winner,
'third_set_winner' = third_set_winner,
'straight_set' = straight_set,
stringsAsFactors = FALSE
)
return(summary_data)
}
wta_get_set_year <- function(match_data, year){
# Assumes match_data has removed RETIRED matches
player1_list <- as.character(match_data$winner_name)
player2_list <- as.character(match_data$loser_name)
tournament_list <- as.character(match_data$tourney_name)
round_list <- as.character(match_data$round)
score_list <-  as.character(match_data$score)
surface_list <-  as.character(match_data$surface)
datalist = list()
for(index in 1:nrow(match_data)){
player1_name <- player1_list[index]
player2_name <- player2_list[index]
tournament_name <- tournament_list[index]
round_id <- round_list[index]
score <- score_list[index]
surface <- surface_list[index]
datalist[[index]] <- wta_get_set_tidy_df(entire_score = score, year = year,
tournament = tournament_name,
round = round_id, surface = surface,
player1_name = player1_name,
player2_name = player2_name)
}
all_data <- do.call(rbind, datalist)
return(all_data)
}
wta_collect_entire_set_data <- function(year_list){
data_path <- "https://raw.githubusercontent.com/JeffSackmann/tennis_wta/master/wta_matches_"
datalist = list()
for(index in 1:length(year_list)){
year <- year_list[index]
filename <- paste(data_path, year, '.csv', sep = '')
match_data <- read.csv(filename,stringsAsFactors = FALSE)
match_data <- read.csv(filename,stringsAsFactors = FALSE)
five_set_matches <- match_data %>%
filter((tourney_level == 'G')) %>%
# -- Only completed matches
filter(!grepl(score, pattern='RET')) %>%
filter(!grepl(score, pattern='W/O')) %>%
filter(!grepl(score, pattern='ABD')) %>%
filter(!grepl(score, pattern='DEF')) %>%
# -- Remove matches with less than 3 sets played
filter(stringr::str_count(score,pattern = '-') >= 3) %>%
filter(!is.na(score)) %>%
select(tourney_id, tourney_name, surface, winner_name,
loser_name, score, round, surface)
datalist[[index]] <- get_set_year(match_data = five_set_matches,
year = year)
}
all_data <- do.call(rbind, datalist)
return(all_data)
}
# test it out
test=wta_collect_entire_set_data(1968:1980)
wta_collect_entire_set_data <- function(year_list){
data_path <- "https://raw.githubusercontent.com/JeffSackmann/tennis_wta/master/wta_matches_"
datalist = list()
for(index in 1:length(year_list)){
year <- year_list[index]
filename <- paste(data_path, year, '.csv', sep = '')
match_data <- read.csv(filename,stringsAsFactors = FALSE)
match_data <- read.csv(filename,stringsAsFactors = FALSE)
five_set_matches <- match_data %>%
filter((tourney_level == 'G')) %>%
# -- Only completed matches
filter(!grepl(score, pattern='RET')) %>%
filter(!grepl(score, pattern='W/O')) %>%
filter(!grepl(score, pattern='ABD')) %>%
filter(!grepl(score, pattern='DEF')) %>%
# -- Remove matches with less than 3 sets played
filter(stringr::str_count(score,pattern = '-') >= 3) %>%
filter(!is.na(score)) %>%
select(tourney_id, tourney_name, surface, winner_name,
loser_name, score, round, surface)
datalist[[index]] <- wta_get_set_year(match_data = five_set_matches,
year = year)
}
all_data <- do.call(rbind, datalist)
return(all_data)
}
# test it out
test=wta_collect_entire_set_data(1968:1980)
View(test)
# WTA set analysis
# How much does winning the 1st set matter in the WTA grand slams?
library(ggplot2)
library(dplyr)
setwd("/Users/petertea/Documents/Github/match-analysis/")
source("/Users/petertea/Documents/Github/match-analysis/src/wta_collect_set_data.R")
wta_historic_set_data <- wta_collect_entire_set_data(1968:2019)
View(wta_historic_set_data)
wta_historic_set_data <- wta_historic_set_data %>%
mutate(drop_1st_set_and_still_won = ifelse(first_set_winner == 2, 1,0))
wta_historic_set_data %>%
group_by(year) %>%
summarise(prop = sum(drop_1st_set_and_still_won) / n())
wta_historic_set_data %>%
group_by(year) %>%
summarise(prop = sum(drop_1st_set_and_still_won) / n()) %>%
ggplot(aes(x = year, y = prop)) +
geom_point(fill = 'blue') + geom_line(color = 'red', linetype = 3)
wta_historic_set_data %>%
filter(grepl(round, pattern = 'F'))
wta_historic_set_data %>%
filter(grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(prop = sum(drop_1st_set_and_still_won) / n()) %>%
ggplot(aes(x = year, y = prop)) +
geom_point(fill = 'blue') + geom_line(color = 'red', linetype = 3)
wta_historic_set_data %>% filter(year ==1978) %>%View()
# How many datapoints do we have each year?
wta_historic_set_data %>%
group_by(year) %>%
summarise(observations = n()) %>%
ggplot(aes(x = year, y = observations)) %>%
geom_point()
# How many datapoints do we have each year?
wta_historic_set_data %>%
group_by(year) %>%
summarise(observations = n()) %>%
ggplot(aes(x = year, y = observations)) +
geom_point()
# WTA set analysis
# How much does winning the 1st set matter in the WTA grand slams?
library(ggplot2)
library(dplyr)
setwd("/Users/petertea/Documents/Github/match-analysis/")
source("/Users/petertea/Documents/Github/match-analysis/src/wta_collect_set_data.R")
wta_historic_set_data <- wta_collect_entire_set_data(1968:2019)
# How many datapoints do we have each year?
wta_historic_set_data %>%
group_by(year) %>%
summarise(observations = n()) %>%
ggplot(aes(x = year, y = observations)) +
geom_point()
wta_historic_set_data <- wta_historic_set_data %>%
mutate(drop_1st_set_and_still_won = ifelse(first_set_winner == 2, 1,0))
wta_historic_set_data %>%
filter(year >= 1988) %>%
filter(grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(prop = sum(drop_1st_set_and_still_won) / n()) %>%
ggplot(aes(x = year, y = prop)) +
geom_point(fill = 'blue') + geom_line(color = 'red', linetype = 3)
# --> Save file..
saveRDS(wta_historic_set_data, file = "wta_historic_set_data.rds")
getwd()
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/petertea/Documents/GitHub/match-analysis/wta_analysis")
wta_historic_set_data %>%
filter(year >= 1988) %>%
filter(grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(prop = sum(drop_1st_set_and_still_won) / n()) %>%
ggplot(aes(x = year, y = prop)) +
geom_point(fill = 'blue') + geom_line(color = 'red', linetype = 3)
wta_historic_set_data %>%
filter(year >= 1988) %>%
#filter(grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(prop = sum(drop_1st_set_and_still_won) / n()) %>%
ggplot(aes(x = year, y = prop)) +
geom_point(fill = 'blue') + geom_line(color = 'red', linetype = 3)
wta_data <- wta_historic_set_data %>%
filter(year >= 1988) %>%
#filter(grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(prop = sum(drop_1st_set_and_still_won) / n())
View(wta_data)
wta_data_F <- <- wta_historic_set_data %>%
filter(year >= 1988) %>%
filter(grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(prop = sum(drop_1st_set_and_still_won) / n())
wta_data_F <- wta_historic_set_data %>%
filter(year >= 1988) %>%
filter(grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(prop = sum(drop_1st_set_and_still_won) / n())
View(wta_data_F)
wta_data_F <- wta_historic_set_data %>%
filter(year >= 1988) %>%
filter(grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(prop = sum(F_drop_1st_set_and_still_won) / n())
wta_data_F <- wta_historic_set_data %>%
filter(year >= 1988) %>%
filter(grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(F_prop = sum(drop_1st_set_and_still_won) / n())
wta_data_NF <- wta_historic_set_data %>%
filter(year >= 1988) %>%
filter(!grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(F_prop = sum(drop_1st_set_and_still_won) / n())
View(wta_data_NF)
wta_data %>% left_join(wta_data_F, by = year)
wta_data %>% left_join(wta_data_F, by = 'year')
wta_data %>% left_join(wta_data_F, by = 'year') %>%
left_join(wta_data_NF, by = 'year')
wta_data_NF <- wta_historic_set_data %>%
filter(year >= 1988) %>%
filter(!grepl(round, pattern = 'F'))%>%
group_by(year) %>%
summarise(NF_prop = sum(drop_1st_set_and_still_won) / n())
wta_data %>% left_join(wta_data_F, by = 'year') %>%
left_join(wta_data_NF, by = 'year')
wta_to_plot <- wta_data %>% left_join(wta_data_F, by = 'year') %>%
left_join(wta_data_NF, by = 'year')
melt(wta_to_plot, id=c("year"))
reshape2::melt(wta_to_plot, id=c("year"))
wta_to_plot <- reshape2::melt(wta_to_plot, id=c("year"))
wta_to_plot
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point(fill = 'blue') + geom_line(linetype = 3)
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto')
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto') +
xlab("Year") +
theme_bw() +
ylab("Win Proportion") +
ggtitle('Does dropping the 1st Set matter in the WTA')+
scale_fill_manual(values=c("blue", "green", "red"))
ggplot(data = wta_to_plot, aes(x = year, y = value, fill = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto') +
xlab("Year") +
theme_bw() +
ylab("Win Proportion") +
ggtitle('Does dropping the 1st Set matter in the WTA')+
scale_fill_manual(values=c("blue", "green", "red"))
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto') +
xlab("Year") +
theme_bw() +
ylab("Win Proportion") +
ggtitle('Does dropping the 1st Set matter in the WTA')+
scale_color_manual(values=c("blue", "green", "red"))
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto') +
xlab("Year") +
theme_bw() +
ylab("Win Proportion") +
ggtitle('Does dropping the 1st Set matter in the WTA')+
scale_color_manual(values=c("blue", "forestgreen", "red"))
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto', alpha = 0.5) +
xlab("Year") +
theme_bw() +
ylab("Win Proportion") +
ggtitle('Does dropping the 1st Set matter in the WTA')+
scale_color_manual(values=c("blue", "forestgreen", "red"))
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto', alpha = 0.25) +
xlab("Year") +
theme_bw() +
ylab("Win Proportion") +
ggtitle('Does dropping the 1st Set matter in the WTA')+
scale_color_manual(values=c("blue", "forestgreen", "red"))
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto', alpha = 0.25) +
xlab("Year") +
theme_bw() +
ylab("Win Proportion") +
ggtitle('Does dropping the 1st Set matter in the WTA')+
scale_color_manual(values=c("blue", "forestgreen", "red"),labels = c('r','b','g'))
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto', alpha = 0.25) +
xlab("Year") +
theme_bw() +
ylab("Win Proportion") +
ggtitle('Does dropping the 1st Set matter in the WTA')+
scale_color_manual(values=c("blue", "forestgreen", "red"))
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto', alpha = 0.25) +
xlab("Year") +
theme_bw() +
ylab("Win Proportion") +
ggtitle('Does dropping the 1st Set matter in the WTA')+
scale_color_manual(values=c("blue", "forestgreen", "red")labels = c('Entire Tournament','QF and up','Before QF'))
ggplot(data = wta_to_plot, aes(x = year, y = value, color = variable)) +
geom_point() + geom_line(linetype = 3) + geom_smooth(method='auto', alpha = 0.25) +
xlab("Year") +
theme_bw() +
ylab("Win Proportion") +
ggtitle('Does dropping the 1st Set matter in the WTA')+
scale_color_manual(values=c("blue", "forestgreen", "red"),labels = c('Entire Tournament','QF and up','Before QF'))
