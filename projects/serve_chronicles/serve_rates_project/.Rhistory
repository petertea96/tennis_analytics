wta_year_rate <- wta_rates_data %>%
filter(rank <= 50) %>%
group_by(year) %>%
summarize(avg_matches = mean(matches_played),
avg_df_rate = mean(avg_df_rate),
avg_ace_rate = mean(avg_ace_rate),
avg_ace_df_ratio = mean(ace_df_ratio)) %>%
mutate(avg_df_rate_per10 = avg_df_rate*10,
avg_ace_rate_per10 = avg_ace_rate*10)
atp_data_path <- "C:/Users/peter.tea/projects/tennis/data/processed/atp_serve_rates.csv"
atp_rates_data <- read.csv(atp_data_path)
# -=- Look at the data
atp_rates_data %>%
filter(rank <= 100) %>%
arrange(year,rank) %>%
View()
# -=- Summarize df rates by year
atp_year_rate <- atp_rates_data %>%
filter(rank <= 50) %>%
group_by(year) %>%
summarize(avg_matches = mean(matches_played),
avg_df_rate = mean(avg_df_rate),
avg_ace_rate = mean(avg_ace_rate),
avg_ace_df_ratio = mean(ace_df_ratio)) %>%
mutate(avg_df_rate_per10 = avg_df_rate*10,
avg_ace_rate_per10 = avg_ace_rate*10)
wta_year_rate$league = 'WTA'
atp_year_rate$league = 'ATP'
all_year_dat <- rbind(wta_year_rate, atp_year_rate)
# ----- === ----- === ----- === ----- ===  ----- === ----- ===
# ----- === ----- === ----- === ----- ===  ----- === ----- ===
library(gganimate, lib = "C:/Users/peter.tea/projects/R")
library(gifski, lib = "C:/Users/peter.tea/projects/R")
library(plyr, lib = "C:/Users/peter.tea/projects/R")
y_level <- c("Ace to Double Fault", "       Ratio")
y_axis_lab <- y_level %>%
stringr::str_pad(width = max(stringr::str_length(.)),
side = "right") %>%
stringr::str_c(collapse = "\n")
ratio_gif_plot <- ggplot() +
geom_line(data=all_year_dat,
aes(x=year, y=avg_ace_df_ratio,
color = league)) +
geom_point(data=all_year_dat,
aes(x=year, y=avg_ace_df_ratio,
group = seq_along(year),
fill = league),
shape = 21,) +
# geom_smooth(data=all_year_dat,
#              aes(x=year, y=avg_df_rate_per10,
#                  color = league)) +
# -- Change legend color scale
scale_fill_manual(values = c('#5DADE2', '#EC7063'),
c('ATP', 'WTA')) +
scale_color_manual(values = c('#5DADE2', '#EC7063'),
c('ATP', 'WTA')) +
scale_x_continuous(name= 'Year',
seq(1991,2019,4)) +
scale_y_continuous(name = y_axis_lab,
seq(0.5,3,0.5)) +
geom_hline(yintercept = 1,
linetype = 'dashed',
color = '#808080') +
# -- Axis labels
labs(
x = 'Year',
y = y_axis_lab,
title =  "Ace-to-Double-Fault-Ratios Through Time ",
caption="StatsOnTheT")  +
peter_year_theme() +
theme(axis.title.y = element_text(hjust = 0.5,
vjust = 1.5)) +
transition_reveal(year)
peter_year_theme <- function(number_text_color = 'black',
family_font = 'mono',
bg_colour = '#FEF5E7'
){
theme(
# -- Title
title = element_text(size = rel(1.0),
face = "bold",
family=family_font),
# -- Legend
legend.key=element_blank(),
#legend.position = c(0.56, - 0.075),
legend.position = 'bottom',
legend.title = element_blank(), # no title
legend.direction = 'horizontal',
#legend.margin=margin(t=0, r=-2, b=5, l=-2),
legend.background = element_blank(),
legend.text = element_text(family=family_font,
face = 'bold'),
plot.caption=element_text(hjust=1,
size=9,
margin=margin(t=-17),
family=family_font,
face='italic'),
plot.margin = margin(10, 10, 10, 10),
#grids
panel.grid.major.x = element_line(colour="#E5E4E2", size=0.01),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour="#E5E4E2", size=0.005),
panel.grid.minor.y = element_blank(),
#axis
#axis.title.x = element_text(size = 11,
#                            family=family_font,
#                            face="bold"),
axis.title.x = element_text(vjust = 0.95,
hjust = 0.5,
#vjust=22, hjust = 1,
size = 12,
family=family_font,
face="bold"),
#axis.title.y = element_text(hjust = 0.5,
#                            vjust = 1.5,
#                            size = 11),
axis.title.y = element_text(#angle = 0,
vjust = 0.7,
hjust = 0.55,
size = 12,
face = 'bold'),
axis.text.x = element_text(hjust=0.5,
face = 'bold'),
axis.line = element_line(),
axis.line.x = element_line(size = 0.75),
axis.line.y = element_line(size = 0.75),
# -- Plot background
plot.background = element_rect(fill = bg_colour, #outside plot background
colour = "black",size = 1),
panel.background = element_rect(fill = bg_colour), #inside plot background
panel.border = element_rect(colour = "black", fill=NA, size=1)
)
}
ratio_gif_plot <- ggplot() +
geom_line(data=all_year_dat,
aes(x=year, y=avg_ace_df_ratio,
color = league)) +
geom_point(data=all_year_dat,
aes(x=year, y=avg_ace_df_ratio,
group = seq_along(year),
fill = league),
shape = 21,) +
# geom_smooth(data=all_year_dat,
#              aes(x=year, y=avg_df_rate_per10,
#                  color = league)) +
# -- Change legend color scale
scale_fill_manual(values = c('#5DADE2', '#EC7063'),
c('ATP', 'WTA')) +
scale_color_manual(values = c('#5DADE2', '#EC7063'),
c('ATP', 'WTA')) +
scale_x_continuous(name= 'Year',
seq(1991,2019,4)) +
scale_y_continuous(name = y_axis_lab,
seq(0.5,3,0.5)) +
geom_hline(yintercept = 1,
linetype = 'dashed',
color = '#808080') +
# -- Axis labels
labs(
x = 'Year',
y = y_axis_lab,
title =  "Ace-to-Double-Fault-Ratios Through Time ",
caption="StatsOnTheT")  +
peter_year_theme() +
theme(axis.title.y = element_text(hjust = 0.5,
vjust = 1.5)) +
transition_reveal(year)
animate(ratio_gif_plot, duration = 7, fps = 20,
width = 580, height = 340, end_pause = 45,
renderer = gifski_renderer('C:/Users/peter.tea/projects/tennis/serve_rates_project/serve_rates_post/plots/ratio_trend.gif'))
animate(ratio_gif_plot, duration = 7, fps = 20,
width = 580, height = 340, end_pause = 45,
renderer = gifski_renderer('C:/Users/peter.tea/projects/tennis/serve_rates_project/serve_rates_post/plots/ratio_trend.gif'))
ratio_gif_plot
ratio_gif_plot <- ggplot() +
geom_line(data=all_year_dat,
aes(x=year, y=avg_ace_df_ratio,
color = league)) +
geom_point(data=all_year_dat,
aes(x=year, y=avg_ace_df_ratio,
group = seq_along(year),
fill = league),
shape = 21,) +
# geom_smooth(data=all_year_dat,
#              aes(x=year, y=avg_df_rate_per10,
#                  color = league)) +
# -- Change legend color scale
scale_fill_manual(values = c('#5DADE2', '#EC7063'),
c('ATP', 'WTA')) +
scale_color_manual(values = c('#5DADE2', '#EC7063'),
c('ATP', 'WTA')) +
scale_x_continuous(name= 'Year',
seq(1991,2019,4)) +
scale_y_continuous(name = y_axis_lab,
seq(0.5,3,0.5)) +
geom_hline(yintercept = 1,
linetype = 'dashed',
color = '#808080') +
# -- Axis labels
labs(
x = 'Year',
y = y_axis_lab,
title =  "Ace-to-Double-Fault-Ratios Through Time ",
caption="StatsOnTheT")  +
peter_year_theme() +
theme(axis.title.y = element_text(hjust = 0.5,
vjust = 1.5)) +
transition_reveal(year)
ratio_gif_plot
library(dplyr)
library(ggplot2)
wta_data_path <- "C:/Users/peter.tea/projects/tennis/data/processed/wta_serve_rates.csv"
wta_rates_data <- read.csv(wta_data_path)
# -=- Look at the data
wta_rates_data %>%
filter(rank <= 100) %>%
arrange(year,rank) %>%
View()
# -=- Summarize df rates by year
wta_year_rate <- wta_rates_data %>%
filter(rank <= 50) %>%
group_by(year) %>%
summarize(avg_matches = mean(matches_played),
avg_df_rate = mean(avg_df_rate),
avg_ace_rate = mean(avg_ace_rate),
avg_ace_df_ratio = mean(ace_df_ratio)) %>%
mutate(avg_df_rate_per10 = avg_df_rate*10,
avg_ace_rate_per10 = avg_ace_rate*10)
View(wta_year_rate)
wta_data_path <- "C:/Users/peter.tea/projects/tennis/data/processed/wta_serve_rates.csv"
wta_rates_data <- read.csv(wta_data_path)
# -=- Look at the data
wta_rates_data %>%
filter(rank <= 100) %>%
arrange(year,rank) %>%
View()
# -=- Summarize df rates by year
wta_year_rate <- wta_rates_data %>%
filter(rank <= 50) %>%
group_by(year) %>%
summarize(avg_matches = mean(matches_played),
avg_df_rate = mean(avg_df_rate),
avg_ace_rate = mean(avg_ace_rate),
avg_ace_df_ratio = mean(ace_df_ratio)) %>%
mutate(avg_df_rate_per10 = avg_df_rate*10,
avg_ace_rate_per10 = avg_ace_rate*10)
View(wta_year_rate)
library(dplyr)
library(ggplot2)
wta_data_path <- "C:/Users/peter.tea/projects/tennis/data/processed/wta_serve_rates.csv"
wta_rates_data <- read.csv(wta_data_path)
# -=- Look at the data
wta_rates_data %>%
filter(rank <= 100) %>%
arrange(year,rank) %>%
View()
# -=- Summarize df rates by year
wta_year_rate <- wta_rates_data %>%
filter(rank <= 50) %>%
group_by(year) %>%
summarize(avg_matches = mean(matches_played),
avg_df_rate = mean(avg_df_rate),
avg_ace_rate = mean(avg_ace_rate),
avg_ace_df_ratio = mean(ace_df_ratio)) %>%
mutate(avg_df_rate_per10 = avg_df_rate*10,
avg_ace_rate_per10 = avg_ace_rate*10)
View(wta_year_rate)
# -=- Summarize df rates by year
wta_year_rate <- wta_rates_data %>%
filter(rank <= 50) %>%
dplyr::group_by(year) %>%
summarize(avg_matches = mean(matches_played),
avg_df_rate = mean(avg_df_rate),
avg_ace_rate = mean(avg_ace_rate),
avg_ace_df_ratio = mean(ace_df_ratio)) %>%
mutate(avg_df_rate_per10 = avg_df_rate*10,
avg_ace_rate_per10 = avg_ace_rate*10)
View(wta_year_rate)
# -=- Summarize df rates by year
wta_year_rate <- wta_rates_data %>%
filter(rank <= 50) %>%
dplyr::group_by(year) %>%
summarise(avg_matches = mean(matches_played),
avg_df_rate = mean(avg_df_rate),
avg_ace_rate = mean(avg_ace_rate),
avg_ace_df_ratio = mean(ace_df_ratio)) %>%
mutate(avg_df_rate_per10 = avg_df_rate*10,
avg_ace_rate_per10 = avg_ace_rate*10)
# -=- Summarize df rates by year
wta_year_rate <- wta_rates_data %>%
filter(rank <= 50) %>%
View()
# -=- Summarize df rates by year
wta_year_rate <- wta_rates_data %>%
dplyr::filter(rank <= 50) %>%
dplyr::group_by(year) %>%
dplyr::summarise(avg_matches = mean(matches_played),
avg_df_rate = mean(avg_df_rate),
avg_ace_rate = mean(avg_ace_rate),
avg_ace_df_ratio = mean(ace_df_ratio)) %>%
dplyr::mutate(avg_df_rate_per10 = avg_df_rate*10,
avg_ace_rate_per10 = avg_ace_rate*10)
View(wta_year_rate)
atp_data_path <- "C:/Users/peter.tea/projects/tennis/data/processed/atp_serve_rates.csv"
atp_rates_data <- read.csv(atp_data_path)
# -=- Look at the data
atp_rates_data %>%
filter(rank <= 100) %>%
arrange(year,rank) %>%
View()
# -=- Summarize df rates by year
atp_year_rate <- atp_rates_data %>%
dplyr::filter(rank <= 50) %>%
dplyr::group_by(year) %>%
dplyr::summarise(avg_matches = mean(matches_played),
avg_df_rate = mean(avg_df_rate),
avg_ace_rate = mean(avg_ace_rate),
avg_ace_df_ratio = mean(ace_df_ratio)) %>%
dplyr::mutate(avg_df_rate_per10 = avg_df_rate*10,
avg_ace_rate_per10 = avg_ace_rate*10)
View(atp_year_rate)
wta_year_rate$league = 'WTA'
atp_year_rate$league = 'ATP'
all_year_dat <- rbind(wta_year_rate, atp_year_rate)
# ----- === ----- === ----- === ----- ===  ----- === ----- ===
# ----- === ----- === ----- === ----- ===  ----- === ----- ===
library(gganimate, lib = "C:/Users/peter.tea/projects/R")
library(gifski, lib = "C:/Users/peter.tea/projects/R")
library(plyr, lib = "C:/Users/peter.tea/projects/R")
y_level <- c("Ace to Double Fault", "       Ratio")
y_axis_lab <- y_level %>%
stringr::str_pad(width = max(stringr::str_length(.)),
side = "right") %>%
stringr::str_c(collapse = "\n")
ratio_gif_plot <- ggplot() +
geom_line(data=all_year_dat,
aes(x=year, y=avg_ace_df_ratio,
color = league)) +
geom_point(data=all_year_dat,
aes(x=year, y=avg_ace_df_ratio,
group = seq_along(year),
fill = league),
shape = 21,) +
# geom_smooth(data=all_year_dat,
#              aes(x=year, y=avg_df_rate_per10,
#                  color = league)) +
# -- Change legend color scale
scale_fill_manual(values = c('#5DADE2', '#EC7063'),
c('ATP', 'WTA')) +
scale_color_manual(values = c('#5DADE2', '#EC7063'),
c('ATP', 'WTA')) +
scale_x_continuous(name= 'Year',
seq(1991,2019,4)) +
scale_y_continuous(name = y_axis_lab,
seq(0.5,3,0.5)) +
geom_hline(yintercept = 1,
linetype = 'dashed',
color = '#808080') +
# -- Axis labels
labs(
x = 'Year',
y = y_axis_lab,
title =  "Ace-to-Double-Fault-Ratios Through Time ",
caption="StatsOnTheT")  +
peter_year_theme() +
theme(axis.title.y = element_text(hjust = 0.5,
vjust = 1.5)) +
transition_reveal(year)
peter_year_theme <- function(number_text_color = 'black',
family_font = 'mono',
bg_colour = '#FEF5E7'
){
theme(
# -- Title
title = element_text(size = rel(1.0),
face = "bold",
family=family_font),
# -- Legend
legend.key=element_blank(),
#legend.position = c(0.56, - 0.075),
legend.position = 'bottom',
legend.title = element_blank(), # no title
legend.direction = 'horizontal',
#legend.margin=margin(t=0, r=-2, b=5, l=-2),
legend.background = element_blank(),
legend.text = element_text(family=family_font,
face = 'bold'),
plot.caption=element_text(hjust=1,
size=9,
margin=margin(t=-17),
family=family_font,
face='italic'),
plot.margin = margin(10, 10, 10, 10),
#grids
panel.grid.major.x = element_line(colour="#E5E4E2", size=0.01),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour="#E5E4E2", size=0.005),
panel.grid.minor.y = element_blank(),
#axis
#axis.title.x = element_text(size = 11,
#                            family=family_font,
#                            face="bold"),
axis.title.x = element_text(vjust = 0.95,
hjust = 0.5,
#vjust=22, hjust = 1,
size = 12,
family=family_font,
face="bold"),
#axis.title.y = element_text(hjust = 0.5,
#                            vjust = 1.5,
#                            size = 11),
axis.title.y = element_text(#angle = 0,
vjust = 0.7,
hjust = 0.55,
size = 12,
face = 'bold'),
axis.text.x = element_text(hjust=0.5,
face = 'bold'),
axis.line = element_line(),
axis.line.x = element_line(size = 0.75),
axis.line.y = element_line(size = 0.75),
# -- Plot background
plot.background = element_rect(fill = bg_colour, #outside plot background
colour = "black",size = 1),
panel.background = element_rect(fill = bg_colour), #inside plot background
panel.border = element_rect(colour = "black", fill=NA, size=1)
)
}
ratio_gif_plot <- ggplot() +
geom_line(data=all_year_dat,
aes(x=year, y=avg_ace_df_ratio,
color = league)) +
geom_point(data=all_year_dat,
aes(x=year, y=avg_ace_df_ratio,
group = seq_along(year),
fill = league),
shape = 21,) +
# geom_smooth(data=all_year_dat,
#              aes(x=year, y=avg_df_rate_per10,
#                  color = league)) +
# -- Change legend color scale
scale_fill_manual(values = c('#5DADE2', '#EC7063'),
c('ATP', 'WTA')) +
scale_color_manual(values = c('#5DADE2', '#EC7063'),
c('ATP', 'WTA')) +
scale_x_continuous(name= 'Year',
seq(1991,2019,4)) +
scale_y_continuous(name = y_axis_lab,
seq(0.5,3,0.5)) +
geom_hline(yintercept = 1,
linetype = 'dashed',
color = '#808080') +
# -- Axis labels
labs(
x = 'Year',
y = y_axis_lab,
title =  "Ace-to-Double-Fault-Ratios Through Time ",
caption="StatsOnTheT")  +
peter_year_theme() +
theme(axis.title.y = element_text(hjust = 0.5,
vjust = 1.5)) +
transition_reveal(year)
animate(ratio_gif_plot, duration = 7, fps = 20,
width = 580, height = 340, end_pause = 45,
renderer = gifski_renderer('C:/Users/peter.tea/projects/tennis/serve_rates_project/serve_rates_post/plots/ratio_trend.gif'))
##### --- Some side projects worth considering
###
library(dplyr)
library(ggplot2)
library(ggrepel, lib = "C:/Users/peter.tea/projects/R")
atp_data_path <- "C:/Users/peter.tea/projects/tennis/data/atp_data/atp_2019.csv"
atp_data <- read.csv(atp_data_path)
View(atp_data)
# -- add rankings data
atp_rank_filename <- "C:/Users/peter.tea/projects/tennis/data/processed/atp_rankings.csv"
atp_rankings <- read.csv(atp_rank_filename)
atp_full_data <- atp_data %>%
left_join(atp_rankings[c('player', 'rank', 'year')],
by = c('year' = 'year',"server_id" = 'player' ) ) %>%
rename('server_rank' = 'rank')
View(atp_data)
# -- add rankings data
atp_rank_filename <- "C:/Users/peter.tea/projects/tennis/data/processed/atp_rankings.csv"
atp_rankings <- read.csv(atp_rank_filename)
atp_full_data <- atp_data %>%
left_join(atp_rankings[c('player', 'rank', 'year')],
by = c('year' = 'year',"server_id" = 'player' ) ) %>%
rename('server_rank' = 'rank')
atp_full_data <- atp_data %>%
dplyr::left_join(atp_rankings[c('player', 'rank', 'year')],
by = c('year' = 'year',"server_id" = 'player' ) ) %>%
dplyr::rename('server_rank' = 'rank')
View(atp_full_data)
# --> Add column of df rates and ace rates
atp_full_data <- atp_full_data %>%
filter((s_svpt) > 0 & (s_2ndIn > 0) ) %>%
mutate(df_rate = s_df / (s_2ndIn + s_df),
ace_rate = s_ace/s_svpt)
atp_grouped_results <- atp_full_data %>%
# only consider matches played between top 50 players?
#filter( (server_rank <= 50) & (returner_rank <= 50)) %>%
group_by(returner, year, returner_rank) %>%
summarise(matches_played = n(),
opp_avg_df_rate = mean(df_rate),
opp_avg_ace_rate = mean(ace_rate)) %>%
left_join(atp_full_data %>%
group_by(server,year) %>%
summarise(avg_df_rate = mean(df_rate),
avg_ace_rate = mean(ace_rate)),
by = c('returner' = 'server', 'year' = 'year')
) %>%
filter(returner_rank <= 100)
